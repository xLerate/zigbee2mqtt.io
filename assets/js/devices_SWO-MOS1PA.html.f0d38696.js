"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[2213],{98333:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>h,data:()=>y});var n=a(37711);const i=(0,n.Lk)("h1",{id:"swann-swo-mos1pa",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#swann-swo-mos1pa"},[(0,n.Lk)("span",null,"Swann SWO-MOS1PA")])],-1),l=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1),r=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"SWO-MOS1PA")],-1),o=(0,n.Lk)("td",null,"Vendor",-1),s=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"Motion and temperature sensor")],-1),d=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"occupancy, battery_low, tamper, linkquality")],-1),c=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/SWO-MOS1PA.png",alt:"Swann SWO-MOS1PA"})])],-1),u=(0,n.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="temperature-not-supported" tabindex="-1"><a class="header-anchor" href="#temperature-not-supported"><span>Temperature not supported</span></a></h3><p>Device is listed as having temperature detection. This feature is still being investigated.</p><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="occupancy-binary" tabindex="-1"><a class="header-anchor" href="#occupancy-binary"><span>Occupancy (binary)</span></a></h3><p>Indicates whether the device detected occupancy. Value can be found in the published state on the <code>occupancy</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> occupancy is ON, if <code>false</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates if the battery of this device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary"><span>Tamper (binary)</span></a></h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric"><span>Linkquality (numeric)</span></a></h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',12),p={},h=(0,a(3790).A)(p,[["render",function(e,t){const a=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[i,(0,n.Lk)("table",null,[l,(0,n.Lk)("tbody",null,[r,(0,n.Lk)("tr",null,[o,(0,n.Lk)("td",null,[(0,n.bF)(a,{to:"/supported-devices/#v=Swann"},{default:(0,n.k6)((()=>[(0,n.eW)("Swann")])),_:1})])]),s,d,c])]),u])}]]),y=JSON.parse('{"path":"/devices/SWO-MOS1PA.html","title":"Swann SWO-MOS1PA control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Swann SWO-MOS1PA control via MQTT","description":"Integrate your Swann SWO-MOS1PA via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-06-08T17:35:15.000Z"},"headers":[{"level":2,"title":"Notes","slug":"notes","link":"#notes","children":[{"level":3,"title":"Temperature not supported","slug":"temperature-not-supported","link":"#temperature-not-supported","children":[]}]},{"level":2,"title":"Exposes","slug":"exposes","link":"#exposes","children":[{"level":3,"title":"Occupancy (binary)","slug":"occupancy-binary","link":"#occupancy-binary","children":[]},{"level":3,"title":"Battery low (binary)","slug":"battery-low-binary","link":"#battery-low-binary","children":[]},{"level":3,"title":"Tamper (binary)","slug":"tamper-binary","link":"#tamper-binary","children":[]},{"level":3,"title":"Linkquality (numeric)","slug":"linkquality-numeric","link":"#linkquality-numeric","children":[]}]}],"git":{"updatedTime":1723570797000},"filePathRelative":"devices/SWO-MOS1PA.md"}')}}]);